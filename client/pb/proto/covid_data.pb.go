// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.6.1
// source: proto/covid_data.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CovidCasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId                 string       `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Country             string       `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode         string       `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	TotalCases          int32        `protobuf:"varint,4,opt,name=totalCases,proto3" json:"totalCases,omitempty"`
	NewCases            int32        `protobuf:"varint,5,opt,name=newCases,proto3" json:"newCases,omitempty"`
	TotalDeaths         int32        `protobuf:"varint,6,opt,name=totalDeaths,proto3" json:"totalDeaths,omitempty"`
	NewDeaths           int32        `protobuf:"varint,7,opt,name=newDeaths,proto3" json:"newDeaths,omitempty"`
	ActiveCases         int32        `protobuf:"varint,8,opt,name=activeCases,proto3" json:"activeCases,omitempty"`
	TotalRecovered      int32        `protobuf:"varint,9,opt,name=totalRecovered,proto3" json:"totalRecovered,omitempty"`
	CriticalCases       int32        `protobuf:"varint,10,opt,name=criticalCases,proto3" json:"criticalCases,omitempty"`
	CasesPerOneMillion  float64      `protobuf:"fixed64,11,opt,name=casesPerOneMillion,proto3" json:"casesPerOneMillion,omitempty"`
	DeathsPerOneMillion float64      `protobuf:"fixed64,12,opt,name=deathsPerOneMillion,proto3" json:"deathsPerOneMillion,omitempty"`
	Tests               int32        `protobuf:"varint,13,opt,name=tests,proto3" json:"tests,omitempty"`
	TestsPerOneMillion  float64      `protobuf:"fixed64,14,opt,name=testsPerOneMillion,proto3" json:"testsPerOneMillion,omitempty"`
	Continent           string       `protobuf:"bytes,15,opt,name=continent,proto3" json:"continent,omitempty"`
	CountryInfo         *CountryInfo `protobuf:"bytes,16,opt,name=countryInfo,proto3" json:"countryInfo,omitempty"`
	Updated             string       `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	XV                  int32        `protobuf:"varint,18,opt,name=__v,json=V,proto3" json:"__v,omitempty"`
}

func (x *CovidCasesResponse) Reset() {
	*x = CovidCasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_covid_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CovidCasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CovidCasesResponse) ProtoMessage() {}

func (x *CovidCasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_covid_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CovidCasesResponse.ProtoReflect.Descriptor instead.
func (*CovidCasesResponse) Descriptor() ([]byte, []int) {
	return file_proto_covid_data_proto_rawDescGZIP(), []int{0}
}

func (x *CovidCasesResponse) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *CovidCasesResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CovidCasesResponse) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CovidCasesResponse) GetTotalCases() int32 {
	if x != nil {
		return x.TotalCases
	}
	return 0
}

func (x *CovidCasesResponse) GetNewCases() int32 {
	if x != nil {
		return x.NewCases
	}
	return 0
}

func (x *CovidCasesResponse) GetTotalDeaths() int32 {
	if x != nil {
		return x.TotalDeaths
	}
	return 0
}

func (x *CovidCasesResponse) GetNewDeaths() int32 {
	if x != nil {
		return x.NewDeaths
	}
	return 0
}

func (x *CovidCasesResponse) GetActiveCases() int32 {
	if x != nil {
		return x.ActiveCases
	}
	return 0
}

func (x *CovidCasesResponse) GetTotalRecovered() int32 {
	if x != nil {
		return x.TotalRecovered
	}
	return 0
}

func (x *CovidCasesResponse) GetCriticalCases() int32 {
	if x != nil {
		return x.CriticalCases
	}
	return 0
}

func (x *CovidCasesResponse) GetCasesPerOneMillion() float64 {
	if x != nil {
		return x.CasesPerOneMillion
	}
	return 0
}

func (x *CovidCasesResponse) GetDeathsPerOneMillion() float64 {
	if x != nil {
		return x.DeathsPerOneMillion
	}
	return 0
}

func (x *CovidCasesResponse) GetTests() int32 {
	if x != nil {
		return x.Tests
	}
	return 0
}

func (x *CovidCasesResponse) GetTestsPerOneMillion() float64 {
	if x != nil {
		return x.TestsPerOneMillion
	}
	return 0
}

func (x *CovidCasesResponse) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *CovidCasesResponse) GetCountryInfo() *CountryInfo {
	if x != nil {
		return x.CountryInfo
	}
	return nil
}

func (x *CovidCasesResponse) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *CovidCasesResponse) GetXV() int32 {
	if x != nil {
		return x.XV
	}
	return 0
}

type CountryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId  int32   `protobuf:"varint,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Iso2 string  `protobuf:"bytes,2,opt,name=iso2,proto3" json:"iso2,omitempty"`
	Iso3 string  `protobuf:"bytes,3,opt,name=iso3,proto3" json:"iso3,omitempty"`
	Lat  float64 `protobuf:"fixed64,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Long float64 `protobuf:"fixed64,5,opt,name=long,proto3" json:"long,omitempty"`
	Flag string  `protobuf:"bytes,6,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *CountryInfo) Reset() {
	*x = CountryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_covid_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryInfo) ProtoMessage() {}

func (x *CountryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_covid_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryInfo.ProtoReflect.Descriptor instead.
func (*CountryInfo) Descriptor() ([]byte, []int) {
	return file_proto_covid_data_proto_rawDescGZIP(), []int{1}
}

func (x *CountryInfo) GetXId() int32 {
	if x != nil {
		return x.XId
	}
	return 0
}

func (x *CountryInfo) GetIso2() string {
	if x != nil {
		return x.Iso2
	}
	return ""
}

func (x *CountryInfo) GetIso3() string {
	if x != nil {
		return x.Iso3
	}
	return ""
}

func (x *CountryInfo) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *CountryInfo) GetLong() float64 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *CountryInfo) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type CovidCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchString string `protobuf:"bytes,1,opt,name=search_string,json=searchString,proto3" json:"search_string,omitempty"`
}

func (x *CovidCasesRequest) Reset() {
	*x = CovidCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_covid_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CovidCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CovidCasesRequest) ProtoMessage() {}

func (x *CovidCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_covid_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CovidCasesRequest.ProtoReflect.Descriptor instead.
func (*CovidCasesRequest) Descriptor() ([]byte, []int) {
	return file_proto_covid_data_proto_rawDescGZIP(), []int{2}
}

func (x *CovidCasesRequest) GetSearchString() string {
	if x != nil {
		return x.SearchString
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*CovidCasesResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_covid_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_covid_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_covid_data_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetResponse() []*CovidCasesResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_proto_covid_data_proto protoreflect.FileDescriptor

var file_proto_covid_data_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xf0, 0x04, 0x0a,
	0x12, 0x43, 0x6f, 0x76, 0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x61, 0x74, 0x68, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x61, 0x74, 0x68, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x63, 0x61, 0x73, 0x65, 0x73, 0x50,
	0x65, 0x72, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13,
	0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x50, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x64, 0x65, 0x61, 0x74, 0x68,
	0x73, 0x50, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65, 0x72,
	0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x0e, 0x0a, 0x03, 0x5f, 0x5f, 0x76, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x56, 0x22,
	0x80, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x6f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x73, 0x6f, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x6f, 0x33, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x6f, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x22, 0x38, 0x0a, 0x11, 0x43, 0x6f, 0x76, 0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x3e, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x76, 0x69, 0x64, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x4c, 0x0a, 0x0c,
	0x43, 0x6f, 0x76, 0x69, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x76, 0x69, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x76, 0x69, 0x64, 0x43, 0x61,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_covid_data_proto_rawDescOnce sync.Once
	file_proto_covid_data_proto_rawDescData = file_proto_covid_data_proto_rawDesc
)

func file_proto_covid_data_proto_rawDescGZIP() []byte {
	file_proto_covid_data_proto_rawDescOnce.Do(func() {
		file_proto_covid_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_covid_data_proto_rawDescData)
	})
	return file_proto_covid_data_proto_rawDescData
}

var file_proto_covid_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_covid_data_proto_goTypes = []interface{}{
	(*CovidCasesResponse)(nil), // 0: pb.CovidCasesResponse
	(*CountryInfo)(nil),        // 1: pb.CountryInfo
	(*CovidCasesRequest)(nil),  // 2: pb.CovidCasesRequest
	(*Response)(nil),           // 3: pb.Response
}
var file_proto_covid_data_proto_depIdxs = []int32{
	1, // 0: pb.CovidCasesResponse.countryInfo:type_name -> pb.CountryInfo
	0, // 1: pb.Response.response:type_name -> pb.CovidCasesResponse
	2, // 2: pb.CovidService.GetCurrentCovidInfo:input_type -> pb.CovidCasesRequest
	3, // 3: pb.CovidService.GetCurrentCovidInfo:output_type -> pb.Response
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_covid_data_proto_init() }
func file_proto_covid_data_proto_init() {
	if File_proto_covid_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_covid_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CovidCasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_covid_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_covid_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CovidCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_covid_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_covid_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_covid_data_proto_goTypes,
		DependencyIndexes: file_proto_covid_data_proto_depIdxs,
		MessageInfos:      file_proto_covid_data_proto_msgTypes,
	}.Build()
	File_proto_covid_data_proto = out.File
	file_proto_covid_data_proto_rawDesc = nil
	file_proto_covid_data_proto_goTypes = nil
	file_proto_covid_data_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CovidServiceClient is the client API for CovidService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CovidServiceClient interface {
	GetCurrentCovidInfo(ctx context.Context, in *CovidCasesRequest, opts ...grpc.CallOption) (*Response, error)
}

type covidServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCovidServiceClient(cc grpc.ClientConnInterface) CovidServiceClient {
	return &covidServiceClient{cc}
}

func (c *covidServiceClient) GetCurrentCovidInfo(ctx context.Context, in *CovidCasesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.CovidService/GetCurrentCovidInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CovidServiceServer is the server API for CovidService service.
type CovidServiceServer interface {
	GetCurrentCovidInfo(context.Context, *CovidCasesRequest) (*Response, error)
}

// UnimplementedCovidServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCovidServiceServer struct {
}

func (*UnimplementedCovidServiceServer) GetCurrentCovidInfo(context.Context, *CovidCasesRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentCovidInfo not implemented")
}

func RegisterCovidServiceServer(s *grpc.Server, srv CovidServiceServer) {
	s.RegisterService(&_CovidService_serviceDesc, srv)
}

func _CovidService_GetCurrentCovidInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CovidCasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CovidServiceServer).GetCurrentCovidInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CovidService/GetCurrentCovidInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CovidServiceServer).GetCurrentCovidInfo(ctx, req.(*CovidCasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CovidService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CovidService",
	HandlerType: (*CovidServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCurrentCovidInfo",
			Handler:    _CovidService_GetCurrentCovidInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/covid_data.proto",
}
